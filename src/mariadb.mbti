// Generated using `moon info`, DON'T EDIT IT
package "bikallem/mariadb"

// Values
let client_compress : ClientFlag

let client_found_rows : ClientFlag

let client_ignore_space : ClientFlag

let client_local_files : ClientFlag

let client_multi_results : ClientFlag

let client_multi_statements : ClientFlag

let client_no_schema : ClientFlag

fn connect(String, port? : UInt, String, String, String, unix_socket? : String, client_flag? : ClientFlag) -> MySql raise

// Errors
pub suberror MySqlError (String, UInt, String, SourceLoc)
impl Show for MySqlError

// Types and methods
type ClientFlag
impl BitOr for ClientFlag

type MySql
fn MySql::affected_rows(Self) -> UInt
fn MySql::close(Self) -> Unit
fn MySql::execute(Self, String) -> MySqlResult? raise
#callsite(autofill(loc))
fn[T] MySql::fail(Self, String, loc~ : SourceLoc) -> T raise
fn MySql::real_escape_string(Self, String) -> String

type MySqlResult
fn MySqlResult::fetch_row(Self) -> MySqlRow?
fn MySqlResult::free_result(Self) -> Unit
fn MySqlResult::iter(Self) -> Iter[MySqlRow]

type MySqlRow
fn MySqlRow::get(Self, Int) -> String?
fn MySqlRow::op_get(Self, Int) -> String

// Type aliases

// Traits

